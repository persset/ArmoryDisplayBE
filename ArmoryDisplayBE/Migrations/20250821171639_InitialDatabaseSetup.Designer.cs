// <auto-generated />
using ArmoryDisplayBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArmoryDisplayBE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250821171639_InitialDatabaseSetup")]
    partial class InitialDatabaseSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArmoryDisplayBE.Models.Constellation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Constellations");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("int");

                    b.Property<int>("HeroRarityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstellationId");

                    b.HasIndex("ElementId");

                    b.HasIndex("HeroClassId");

                    b.HasIndex("HeroRarityId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroBaseStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("int");

                    b.Property<int>("HeroRarityId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstellationId");

                    b.HasIndex("HeroClassId");

                    b.HasIndex("HeroRarityId");

                    b.ToTable("HeroBaseStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeroClasses");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroRarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseStars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeroRarities");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Socials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Socials");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.SpecialtyChangeBonusStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("SpecialtyChangeBonusStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHero", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("HeroId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHeroes");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserSocials", b =>
                {
                    b.Property<int>("SocialsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSocials");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Hero", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Constellation", "Constellation")
                        .WithMany()
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroRarity", "HeroRarity")
                        .WithMany()
                        .HasForeignKey("HeroRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("Element");

                    b.Navigation("HeroClass");

                    b.Navigation("HeroRarity");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroBaseStats", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Constellation", "Constellation")
                        .WithMany()
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroRarity", "HeroRarity")
                        .WithMany()
                        .HasForeignKey("HeroRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("HeroClass");

                    b.Navigation("HeroRarity");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.SpecialtyChangeBonusStats", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHero", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserSocials", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Socials", null)
                        .WithMany()
                        .HasForeignKey("SocialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
