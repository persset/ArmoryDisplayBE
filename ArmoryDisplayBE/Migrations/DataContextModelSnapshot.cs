// <auto-generated />
using ArmoryDisplayBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArmoryDisplayBE.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArmoryDisplayBE.Models.Constellation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Constellations");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.GearSets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BonusStatsId")
                        .HasColumnType("int");

                    b.Property<int?>("BonusStatsValue")
                        .HasColumnType("int");

                    b.Property<bool>("IsTwoPiece")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BonusStatsId");

                    b.ToTable("GearSets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BonusStatsId = 4,
                            BonusStatsValue = 25,
                            IsTwoPiece = false,
                            Name = "Speed Set"
                        },
                        new
                        {
                            Id = 2,
                            BonusStatsId = 5,
                            BonusStatsValue = 12,
                            IsTwoPiece = true,
                            Name = "Critical Set"
                        },
                        new
                        {
                            Id = 3,
                            BonusStatsId = 7,
                            BonusStatsValue = 20,
                            IsTwoPiece = true,
                            Name = "Hit Set"
                        },
                        new
                        {
                            Id = 4,
                            BonusStatsId = 1,
                            BonusStatsValue = 20,
                            IsTwoPiece = true,
                            Name = "Health Set"
                        },
                        new
                        {
                            Id = 5,
                            BonusStatsId = 2,
                            BonusStatsValue = 45,
                            IsTwoPiece = false,
                            Name = "Attack Set"
                        },
                        new
                        {
                            Id = 6,
                            BonusStatsId = 3,
                            BonusStatsValue = 20,
                            IsTwoPiece = true,
                            Name = "Defense Set"
                        },
                        new
                        {
                            Id = 7,
                            IsTwoPiece = false,
                            Name = "Protection Set"
                        },
                        new
                        {
                            Id = 8,
                            BonusStatsId = 8,
                            BonusStatsValue = 20,
                            IsTwoPiece = true,
                            Name = "Resist Set"
                        },
                        new
                        {
                            Id = 9,
                            BonusStatsId = 6,
                            BonusStatsValue = 60,
                            IsTwoPiece = false,
                            Name = "Destruction Set"
                        },
                        new
                        {
                            Id = 10,
                            IsTwoPiece = false,
                            Name = "Lifesteal Set"
                        },
                        new
                        {
                            Id = 11,
                            IsTwoPiece = false,
                            Name = "Counter Set"
                        },
                        new
                        {
                            Id = 12,
                            IsTwoPiece = true,
                            Name = "Unity Set"
                        },
                        new
                        {
                            Id = 13,
                            IsTwoPiece = true,
                            Name = "Immunity Set"
                        },
                        new
                        {
                            Id = 14,
                            IsTwoPiece = false,
                            Name = "Rage Set"
                        },
                        new
                        {
                            Id = 15,
                            BonusStatsId = 4,
                            BonusStatsValue = 12,
                            IsTwoPiece = false,
                            Name = "Revenge Set"
                        },
                        new
                        {
                            Id = 16,
                            IsTwoPiece = true,
                            Name = "Penetration Set"
                        },
                        new
                        {
                            Id = 17,
                            IsTwoPiece = true,
                            Name = "Torrent Set"
                        },
                        new
                        {
                            Id = 18,
                            IsTwoPiece = false,
                            Name = "Injury Set"
                        },
                        new
                        {
                            Id = 19,
                            IsTwoPiece = false,
                            Name = "Reversal Set"
                        },
                        new
                        {
                            Id = 20,
                            IsTwoPiece = false,
                            Name = "Riposte Set"
                        });
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.GearType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GearTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Helmet"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Armor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Boots"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Weapon"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Necklace"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ring"
                        });
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("int");

                    b.Property<int>("HeroRarityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RarityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstellationId");

                    b.HasIndex("ElementId");

                    b.HasIndex("HeroClassId");

                    b.HasIndex("HeroRarityId");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroBaseStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("ConstellationId")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("HeroClassId")
                        .HasColumnType("int");

                    b.Property<int>("HeroRarityId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstellationId");

                    b.HasIndex("HeroClassId");

                    b.HasIndex("HeroRarityId");

                    b.ToTable("HeroBaseStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeroClasses");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroRarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseStars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeroRarities");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Socials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Socials");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.SpecialtyChangeBonusStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("SpecialtyChangeBonusStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Attack"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Defense"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Speed"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Critical Rate"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Critical Damage"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Effectiveness"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Effect Resistance"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Dual Attack Chance"
                        });
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHero", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<double>("CriticalHitChance")
                        .HasColumnType("float");

                    b.Property<int>("CriticalHitDamage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("DualAttackChance")
                        .HasColumnType("float");

                    b.Property<double>("EffectResistance")
                        .HasColumnType("float");

                    b.Property<double>("Effectiveness")
                        .HasColumnType("float");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("HeroId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHeroes");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHeroGear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GearSetId")
                        .HasColumnType("int");

                    b.Property<int>("GearTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("UserHeroHeroId")
                        .HasColumnType("int");

                    b.Property<int>("UserHeroId")
                        .HasColumnType("int");

                    b.Property<int>("UserHeroUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GearSetId");

                    b.HasIndex("GearTypeId");

                    b.HasIndex("UserHeroHeroId", "UserHeroUserId");

                    b.ToTable("UserHeroGears");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHeroGearStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GearStatsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMainStat")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercent")
                        .HasColumnType("bit");

                    b.Property<int>("UserHeroGearId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GearStatsId");

                    b.HasIndex("UserHeroGearId");

                    b.ToTable("UserHeroGearStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserSocials", b =>
                {
                    b.Property<int>("SocialsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSocials");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.GearSets", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Stats", "BonusStats")
                        .WithMany()
                        .HasForeignKey("BonusStatsId");

                    b.Navigation("BonusStats");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.Hero", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Constellation", "Constellation")
                        .WithMany()
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.Element", "Element")
                        .WithMany()
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroRarity", "HeroRarity")
                        .WithMany()
                        .HasForeignKey("HeroRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("Element");

                    b.Navigation("HeroClass");

                    b.Navigation("HeroRarity");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.HeroBaseStats", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Constellation", "Constellation")
                        .WithMany()
                        .HasForeignKey("ConstellationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroClass", "HeroClass")
                        .WithMany()
                        .HasForeignKey("HeroClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.HeroRarity", "HeroRarity")
                        .WithMany()
                        .HasForeignKey("HeroRarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constellation");

                    b.Navigation("HeroClass");

                    b.Navigation("HeroRarity");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.SpecialtyChangeBonusStats", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.User", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Server");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHero", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Hero", "Hero")
                        .WithMany()
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHeroGear", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.GearSets", "GearSet")
                        .WithMany()
                        .HasForeignKey("GearSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.GearType", "GearType")
                        .WithMany()
                        .HasForeignKey("GearTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.UserHero", "UserHero")
                        .WithMany()
                        .HasForeignKey("UserHeroHeroId", "UserHeroUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GearSet");

                    b.Navigation("GearType");

                    b.Navigation("UserHero");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHeroGearStats", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Stats", "GearStats")
                        .WithMany()
                        .HasForeignKey("GearStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.UserHeroGear", "UserHeroGear")
                        .WithMany("UserHeroGearStats")
                        .HasForeignKey("UserHeroGearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GearStats");

                    b.Navigation("UserHeroGear");
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserSocials", b =>
                {
                    b.HasOne("ArmoryDisplayBE.Models.Socials", null)
                        .WithMany()
                        .HasForeignKey("SocialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmoryDisplayBE.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmoryDisplayBE.Models.UserHeroGear", b =>
                {
                    b.Navigation("UserHeroGearStats");
                });
#pragma warning restore 612, 618
        }
    }
}
